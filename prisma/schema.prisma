generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  password String
  role     UserRole   @default(ADMIN)
  status   UserStatus @default(ACTIVE)
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  ProductCategory ProductCategory[]
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Product Product[]
}

model ProductCategory {
  product_id    Int
  product_sku   String
  product       Product  @relation(fields: [product_id], references: [id])
  category_name String
  category_id   Int
  category      Category @relation(fields: [category_id], references: [id])

  @@id([product_id, category_id])
}

model Product {
  id              Int               @id @default(autoincrement())
  sku             String            @unique
  name            String            @unique
  description     String?
  image           String?
  qtyThreshold    Int?
  brand_id        Int
  brand           Brand             @relation(fields: [brand_id], references: [id])
  stockQuantity   StockQuantity[]
  productCategory ProductCategory[]
  bundleProduct   BundleProduct[]
}

model Location {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  address       String
  stockQuantity StockQuantity[]
}

model StockQuantity {
  product_id           Int
  product_name         String
  product_sku          String
  product_qtyThreshold Int?
  location_id          Int
  quantity             Int
  price                Float
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  location             Location @relation(fields: [location_id], references: [id])
  product              Product  @relation(fields: [product_id], references: [id])

  @@id([product_id, location_id])
}

model Bundle {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  price         Float
  bundleProduct BundleProduct[]
}

model BundleProduct {
  bundle_id   Int
  product_id  Int
  product_sku String
  bundle_name String
  product     Product @relation(fields: [product_id], references: [id])
  bundle      Bundle  @relation(fields: [bundle_id], references: [id])

  @@id([product_id, bundle_id])
}

enum UserRole {
  ADMIN
  INTERN
  PARTTIME
  FULLTIME
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  DISABLED
}
